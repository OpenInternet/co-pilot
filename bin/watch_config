#!/usr/bin/env python
# -*- coding: utf-8 -*-

import time
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

class ConfigHandler(FileSystemEventHandler):

    def set_process(self, process):
        self.process = process

    def on_modified(self, event):
        subprocess.call(["supervisorctl", "restart", self.process])

    def on_created(self, event):
        subprocess.call(["supervisorctl", "restart", self.process])


    def on_deleted(self, event):
        subprocess.call(["supervisorctl", "restart", self.process])

def get_conf_watcher(process, config):
    _observer = Observer()
    config_handle = ConfigHandler()
    config_handle.set_process(process)
    _observer.schedule(config_handle, config)
    return _observer

if __name__ == "__main__":
    dnschef_obs = get_conf_watcher("dnschef", "/tmp/copilot/dnschef.conf")
    ap_obs = get_conf_watcher("create_ap", "/tmp/copilot/ap.conf")
    dnschef_obs.start()
    ap_obs.start()
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        dnschef_obs.stop()
        ap_obs.stop()
    dnschef_obs.join()
    ap_obs.join()
